const {
  EmbedBuilder,
  ActionRowBuilder,
  StringSelectMenuBuilder,
  ButtonBuilder,
  ApplicationCommandOptionType,
  PermissionFlagsBits,
} = require('discord.js');
const pgpool = require("../../utils/createPgPool");

module.exports = {
  /**
 * @param {Client} client
 * @param {Interaction} interaction
 */

  name: 'certif_setup',
  description: 'configurer le systeme de certif',
  type: 1,
  options: [
    {
      name: 'channel',
      description: 'Le channel dans lequel tu souhaite envoyer les informations de certif',
      type: ApplicationCommandOptionType.Channel,
      required: true,

    }
  ],
  //permissionsRequired: [PermissionFlagsBits.Administrator],

  callback: async (client, interaction) => {

    const pool = pgpool();
    const channel = interaction.options.getChannel('channel')




    const embed =[
      {
       "color": 0x2f3136,
       "image": {
        "url": "https://image.noelshack.com/fichiers/2023/41/6/1697295217-certification.png"
       },
       "fields": null
      },
      {
       "title": "La certification, qu'est-ce que c'est ? ",
       "fields": [],
       "color": 0x2f3136,
       "description":
        "- La certification de la Photosph√®re vous permet d'√™tre reconnu comme exer√ßant une activit√© **professionnelle**.\n- Elle permet de montrer votre l√©gitimit√© √† soumettre vos offres de **prestations** r√©mun√©r√©es.\n- Obtenez le r√¥le de **mannequin **ou de **photographe certifi√©** ! Cela vous permettra d'exercer un r√¥le de **mentor **aupr√®s des mod√®les ou des photographes d√©butants du serveur.\n- D√©bloquez une nouvelle ic√¥ne √† c√¥t√© de votre pseudo ! C'est bling bling ~",
       "image": {
        "url": "https://i.imgur.com/8A7CGCy.png"
       }
      },
      {
       "title": "Quelles infos dois-je fournir pour √™tre certifi√© ? ",
       "color": 0x2f3136,
       "fields": [
        {
         "name": "üì∏  Je suis **__Photographe__** :",
         "value":
          "- Je donne l'acc√®s √† mon num√©ro de **SIRET** ou de **SIREN**.\n- Je donne l'acc√®s √† un site internet en ligne o√π les informations de mon entreprise sont disponibles (nom, pr√©nom, siret/siren)\n- J'accepte que mon pr√©nom, nom ou que mon nom d'entreprise soit visible sur le serveur.",
         "inline": false
        },
        {
         "name": "üåü  Je suis **__Mannequin__** :",
         "value": "- Je donne l'acc√®s au site internet de mon **agence**, l√† o√π les informations de ma repr√©sentation sont disponibles. (nom, pr√©nom)\n- Je donne acc√®s aux coordonn√©es de mon agence. ",
         "inline": false
        }
       ],
       "image": {
        "url": "https://i.imgur.com/8A7CGCy.png"
       }
      },
      {
       "color": 0x2f3136,
       "description": "Nous assurons que les informations que vous nous fournissez sont trait√©es avec la plus grande confidentialit√© et dans le strict but de v√©rifier votre statut pour la certification. Elles ne seront en aucun cas utilis√©es √† d'autres fins ou partag√©es avec des tiers. ",
       "title": "üëâ S√©curit√©",
       "image": {
        "url": "https://i.ibb.co/9cr0sKP/Group-63.png"
       },
       "fields": null
      }
     ]


     const btn = new ActionRowBuilder()
      .addComponents(
        new ButtonBuilder(  {
          "custom_id": "btn_mannequin",
          "type": 2,
          "style": 3,
          "label": "Certification Mannequin",
          "emoji": {
           "name": "üíõ"
          }
         })

      )
      .addComponents(
        new ButtonBuilder({
          "custom_id": "btn_photographe",
          "type": 2,
          "style": 3,
          "label": "Certification Photographe",
          "emoji": {
           "name": "üß°"
          }
         })

      );


    const sentMessage = await channel
      .send({ embeds: embed,  components: [btn] })
      .catch((err) => {
        console.log(err);
        return;
      });
      console.log(sentMessage.id);

      try {
        const queryText = `INSERT INTO guild (guild_id, channel_id, message_id) VALUES ($1, $2, $3) ON CONFLICT (guild_id) DO NOTHING;`;
        await pool.query(queryText, [interaction.guildId, channel.id, sentMessage.id]);
      } catch (error) {
        console.error('addChannel.js ' + error);
      }
    await interaction.reply({ content: `Votre systeme de certification √† √©t√© configur√© dans ${channel}`, ephemeral: true });
  }
};